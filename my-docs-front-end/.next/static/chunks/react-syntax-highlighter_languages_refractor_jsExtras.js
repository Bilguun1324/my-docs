"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_jsExtras"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/js-extras.js":
/*!**************************************************!*\
  !*** ./node_modules/refractor/lang/js-extras.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = jsExtras;\njsExtras.displayName = \"jsExtras\";\njsExtras.aliases = [];\nfunction jsExtras(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.insertBefore(\"javascript\", \"function-variable\", {\n            \"method-variable\": {\n                pattern: RegExp(\"(\\\\.\\\\s*)\" + Prism.languages.javascript[\"function-variable\"].pattern.source),\n                lookbehind: true,\n                alias: [\n                    \"function-variable\",\n                    \"method\",\n                    \"function\",\n                    \"property-access\"\n                ]\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"function\", {\n            method: {\n                pattern: RegExp(\"(\\\\.\\\\s*)\" + Prism.languages.javascript[\"function\"].source),\n                lookbehind: true,\n                alias: [\n                    \"function\",\n                    \"property-access\"\n                ]\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"constant\", {\n            \"known-class-name\": [\n                {\n                    // standard built-ins\n                    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n                    pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n                    alias: \"class-name\"\n                },\n                {\n                    // errors\n                    pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n                    alias: \"class-name\"\n                }\n            ]\n        });\n        /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function withId(source, flags) {\n            return RegExp(source.replace(/<ID>/g, function() {\n                return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n            }), flags);\n        }\n        Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n            imports: {\n                // https://tc39.es/ecma262/#sec-imports\n                pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            exports: {\n                // https://tc39.es/ecma262/#sec-exports\n                pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            }\n        });\n        Prism.languages.javascript[\"keyword\"].unshift({\n            pattern: /\\b(?:as|default|export|from|import)\\b/,\n            alias: \"module\"\n        }, {\n            pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n            alias: \"control-flow\"\n        }, {\n            pattern: /\\bnull\\b/,\n            alias: [\n                \"null\",\n                \"nil\"\n            ]\n        }, {\n            pattern: /\\bundefined\\b/,\n            alias: \"nil\"\n        });\n        Prism.languages.insertBefore(\"javascript\", \"operator\", {\n            spread: {\n                pattern: /\\.{3}/,\n                alias: \"operator\"\n            },\n            arrow: {\n                pattern: /=>/,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"punctuation\", {\n            \"property-access\": {\n                pattern: withId(/(\\.\\s*)#?<ID>/.source),\n                lookbehind: true\n            },\n            \"maybe-class-name\": {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n                lookbehind: true\n            },\n            dom: {\n                // this contains only a few commonly used DOM variables\n                pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n                alias: \"variable\"\n            },\n            console: {\n                pattern: /\\bconsole(?=\\s*\\.)/,\n                alias: \"class-name\"\n            }\n        }) // add 'maybe-class-name' to tokens which might be a class name\n        ;\n        var maybeClassNameTokens = [\n            \"function\",\n            \"function-variable\",\n            \"method\",\n            \"method-variable\",\n            \"property-access\"\n        ];\n        for(var i = 0; i < maybeClassNameTokens.length; i++){\n            var token = maybeClassNameTokens[i];\n            var value = Prism.languages.javascript[token] // convert regex to object\n            ;\n            if (Prism.util.type(value) === \"RegExp\") {\n                value = Prism.languages.javascript[token] = {\n                    pattern: value\n                };\n            } // keep in mind that we don't support arrays\n            var inside = value.inside || {};\n            value.inside = inside;\n            inside[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/js-extras.js\n"));

/***/ })

}]);