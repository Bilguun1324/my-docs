"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_dot"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/dot.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/dot.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = dot;\ndot.displayName = \"dot\";\ndot.aliases = [\n    \"gv\"\n];\nfunction dot(Prism) {\n    // https://www.graphviz.org/doc/info/lang.html\n    ;\n    (function(Prism) {\n        var ID = \"(?:\" + [\n            // an identifier\n            /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n            /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n            /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n            /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source\n        ].join(\"|\") + \")\";\n        var IDInside = {\n            markup: {\n                pattern: /(^<)[\\s\\S]+(?=>$)/,\n                lookbehind: true,\n                alias: [\n                    \"language-markup\",\n                    \"language-html\",\n                    \"language-xml\"\n                ],\n                inside: Prism.languages.markup\n            }\n        };\n        /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */ function withID(source, flags) {\n            return RegExp(source.replace(/<ID>/g, function() {\n                return ID;\n            }), flags);\n        }\n        Prism.languages.dot = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n                greedy: true\n            },\n            \"graph-name\": {\n                pattern: withID(/(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source, \"i\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"class-name\",\n                inside: IDInside\n            },\n            \"attr-value\": {\n                pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            \"attr-name\": {\n                pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n            \"compass-point\": {\n                pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n                lookbehind: true,\n                alias: \"builtin\"\n            },\n            node: {\n                pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            operator: /[=:]|-[->]/,\n            punctuation: /[\\[\\]{};,]/\n        };\n        Prism.languages.gv = Prism.languages.dot;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kb3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBQ3BCLFNBQVNGLElBQUlHLEtBQUs7SUFDaEIsOENBQThDOztJQUM1QyxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsS0FDRixRQUNBO1lBQ0UsZ0JBQWdCO1lBQ2hCLHVDQUF1Q0MsTUFBTTtZQUM3Qyw0QkFBNEJBLE1BQU07WUFDbEMsZ0NBQWdDQSxNQUFNO1lBQ3RDLCtFQUNHQSxNQUFNO1NBQ1YsQ0FBQ0MsSUFBSSxDQUFDLE9BQ1A7UUFDRixJQUFJQyxXQUFXO1lBQ2JDLFFBQVE7Z0JBQ05DLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87b0JBQUM7b0JBQW1CO29CQUFpQjtpQkFBZTtnQkFDM0RDLFFBQVFULE1BQU1VLFNBQVMsQ0FBQ0wsTUFBTTtZQUNoQztRQUNGO1FBQ0E7Ozs7S0FJQyxHQUNELFNBQVNNLE9BQU9ULE1BQU0sRUFBRVUsS0FBSztZQUMzQixPQUFPQyxPQUNMWCxPQUFPWSxPQUFPLENBQUMsU0FBUztnQkFDdEIsT0FBT2I7WUFDVCxJQUNBVztRQUVKO1FBQ0FaLE1BQU1VLFNBQVMsQ0FBQ2IsR0FBRyxHQUFHO1lBQ3BCa0IsU0FBUztnQkFDUFQsU0FBUztnQkFDVFUsUUFBUTtZQUNWO1lBQ0EsY0FBYztnQkFDWlYsU0FBU0ssT0FDUCwrQ0FBK0NULE1BQU0sRUFDckQ7Z0JBRUZLLFlBQVk7Z0JBQ1pTLFFBQVE7Z0JBQ1JSLE9BQU87Z0JBQ1BDLFFBQVFMO1lBQ1Y7WUFDQSxjQUFjO2dCQUNaRSxTQUFTSyxPQUFPLG9CQUFvQlQsTUFBTTtnQkFDMUNLLFlBQVk7Z0JBQ1pTLFFBQVE7Z0JBQ1JQLFFBQVFMO1lBQ1Y7WUFDQSxhQUFhO2dCQUNYRSxTQUFTSyxPQUFPLHFDQUFxQ1QsTUFBTTtnQkFDM0RLLFlBQVk7Z0JBQ1pTLFFBQVE7Z0JBQ1JQLFFBQVFMO1lBQ1Y7WUFDQWEsU0FBUztZQUNULGlCQUFpQjtnQkFDZlgsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FVLE1BQU07Z0JBQ0paLFNBQVNLLE9BQU8sK0JBQStCVCxNQUFNO2dCQUNyREssWUFBWTtnQkFDWlMsUUFBUTtnQkFDUlAsUUFBUUw7WUFDVjtZQUNBZSxVQUFVO1lBQ1ZDLGFBQWE7UUFDZjtRQUNBcEIsTUFBTVUsU0FBUyxDQUFDVyxFQUFFLEdBQUdyQixNQUFNVSxTQUFTLENBQUNiLEdBQUc7SUFDMUMsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG90LmpzP2MxMzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZG90XG5kb3QuZGlzcGxheU5hbWUgPSAnZG90J1xuZG90LmFsaWFzZXMgPSBbJ2d2J11cbmZ1bmN0aW9uIGRvdChQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5ncmFwaHZpei5vcmcvZG9jL2luZm8vbGFuZy5odG1sXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIElEID1cbiAgICAgICcoPzonICtcbiAgICAgIFtcbiAgICAgICAgLy8gYW4gaWRlbnRpZmllclxuICAgICAgICAvW2EtekEtWl9cXHg4MC1cXHVGRkZGXVtcXHdcXHg4MC1cXHVGRkZGXSovLnNvdXJjZSwgLy8gYSBudW1iZXJcbiAgICAgICAgLy0/KD86XFwuXFxkK3xcXGQrKD86XFwuXFxkKik/KS8uc291cmNlLCAvLyBhIGRvdWJsZS1xdW90ZWQgc3RyaW5nXG4gICAgICAgIC9cIlteXCJcXFxcXSooPzpcXFxcW1xcc1xcU11bXlwiXFxcXF0qKSpcIi8uc291cmNlLCAvLyBIVE1MLWxpa2Ugc3RyaW5nXG4gICAgICAgIC88KD86W148Pl18KD8hPCEtLSk8KD86W148PlwiJ118XCJbXlwiXSpcInwnW14nXSonKSs+fDwhLS0oPzpbXi1dfC0oPyEtPikpKi0tPikqPi9cbiAgICAgICAgICAuc291cmNlXG4gICAgICBdLmpvaW4oJ3wnKSArXG4gICAgICAnKSdcbiAgICB2YXIgSURJbnNpZGUgPSB7XG4gICAgICBtYXJrdXA6IHtcbiAgICAgICAgcGF0dGVybjogLyhePClbXFxzXFxTXSsoPz0+JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogWydsYW5ndWFnZS1tYXJrdXAnLCAnbGFuZ3VhZ2UtaHRtbCcsICdsYW5ndWFnZS14bWwnXSxcbiAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMubWFya3VwXG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmxhZ3NcbiAgICAgKiBAcmV0dXJucyB7UmVnRXhwfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdpdGhJRChzb3VyY2UsIGZsYWdzKSB7XG4gICAgICByZXR1cm4gUmVnRXhwKFxuICAgICAgICBzb3VyY2UucmVwbGFjZSgvPElEPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIElEXG4gICAgICAgIH0pLFxuICAgICAgICBmbGFnc1xuICAgICAgKVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuZG90ID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcL3xeIy4qL20sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdncmFwaC1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSUQoXG4gICAgICAgICAgLyhcXGIoPzpkaWdyYXBofGdyYXBofHN1YmdyYXBoKVsgXFx0XFxyXFxuXSspPElEPi8uc291cmNlLFxuICAgICAgICAgICdpJ1xuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZScsXG4gICAgICAgIGluc2lkZTogSURJbnNpZGVcbiAgICAgIH0sXG4gICAgICAnYXR0ci12YWx1ZSc6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKC8oPVsgXFx0XFxyXFxuXSopPElEPi8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAgJ2F0dHItbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKC8oW1xcWzssIFxcdFxcclxcbl0pPElEPig/PVsgXFx0XFxyXFxuXSo9KS8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAga2V5d29yZDogL1xcYig/OmRpZ3JhcGh8ZWRnZXxncmFwaHxub2RlfHN0cmljdHxzdWJncmFwaClcXGIvaSxcbiAgICAgICdjb21wYXNzLXBvaW50Jzoge1xuICAgICAgICBwYXR0ZXJuOiAvKDpbIFxcdFxcclxcbl0qKSg/Oltld2NfXXxbbnNdW2V3XT8pKD8hW1xcd1xceDgwLVxcdUZGRkZdKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICAgIH0sXG4gICAgICBub2RlOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRCgvKF58W14tLlxcd1xceDgwLVxcdUZGRkZcXFxcXSk8SUQ+Ly5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogSURJbnNpZGVcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjogL1s9Ol18LVstPl0vLFxuICAgICAgcHVuY3R1YXRpb246IC9bXFxbXFxde307LF0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5ndiA9IFByaXNtLmxhbmd1YWdlcy5kb3RcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImRvdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiSUQiLCJzb3VyY2UiLCJqb2luIiwiSURJbnNpZGUiLCJtYXJrdXAiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwibGFuZ3VhZ2VzIiwid2l0aElEIiwiZmxhZ3MiLCJSZWdFeHAiLCJyZXBsYWNlIiwiY29tbWVudCIsImdyZWVkeSIsImtleXdvcmQiLCJub2RlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImd2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/dot.js\n"));

/***/ })

}]);