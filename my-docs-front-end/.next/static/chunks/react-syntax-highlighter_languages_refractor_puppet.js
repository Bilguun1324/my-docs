"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_puppet"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/puppet.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/puppet.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = puppet;\npuppet.displayName = \"puppet\";\npuppet.aliases = [];\nfunction puppet(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.puppet = {\n            heredoc: [\n                // Matches the content of a quoted heredoc string (subject to interpolation)\n                {\n                    pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n                    lookbehind: true,\n                    alias: \"string\",\n                    inside: {\n                        // Matches the end tag\n                        punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n                    }\n                },\n                {\n                    pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        // Matches the end tag\n                        punctuation: /(?=\\S).*\\S(?= *$)/\n                    }\n                },\n                {\n                    pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n                    alias: \"string\",\n                    inside: {\n                        punctuation: {\n                            pattern: /(\\().+?(?=\\))/,\n                            lookbehind: true\n                        }\n                    }\n                }\n            ],\n            \"multiline-comment\": {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                lookbehind: true,\n                greedy: true,\n                alias: \"comment\"\n            },\n            regex: {\n                // Must be prefixed with the keyword \"node\" or a non-word char\n                pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    // Extended regexes must have the x flag. They can contain single-line comments.\n                    \"extended-regex\": {\n                        pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n                        inside: {\n                            comment: /#.*/\n                        }\n                    }\n                }\n            },\n            comment: {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            string: {\n                // Allow for one nested level of double quotes inside interpolation\n                pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n                greedy: true,\n                inside: {\n                    \"double-quoted\": {\n                        pattern: /^\"[\\s\\S]*\"$/,\n                        inside: {\n                        }\n                    }\n                }\n            },\n            variable: {\n                pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n                inside: {\n                    punctuation: /::/\n                }\n            },\n            \"attr-name\": /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n            function: [\n                {\n                    pattern: /(\\.)(?!\\d)\\w+/,\n                    lookbehind: true\n                },\n                /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n            ],\n            number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n            boolean: /\\b(?:false|true)\\b/,\n            // Includes words reserved for future use\n            keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n            datatype: {\n                pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n                alias: \"symbol\"\n            },\n            operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n            punctuation: /[\\[\\]{}().,;]|:+/\n        };\n        var interpolation = [\n            {\n                // Allow for one nested level of braces inside interpolation\n                pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n                lookbehind: true,\n                inside: {\n                    \"short-variable\": {\n                        // Negative look-ahead prevent wrong highlighting of functions\n                        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n                        lookbehind: true,\n                        alias: \"variable\",\n                        inside: {\n                            punctuation: /::/\n                        }\n                    },\n                    delimiter: {\n                        pattern: /^\\$/,\n                        alias: \"variable\"\n                    },\n                    rest: Prism.languages.puppet\n                }\n            },\n            {\n                pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n                lookbehind: true,\n                alias: \"variable\",\n                inside: {\n                    punctuation: /::/\n                }\n            }\n        ];\n        Prism.languages.puppet[\"heredoc\"][0].inside.interpolation = interpolation;\n        Prism.languages.puppet[\"string\"].inside[\"double-quoted\"].inside.interpolation = interpolation;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/puppet.js\n"));

/***/ })

}]);