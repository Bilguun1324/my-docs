"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_diff"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/diff.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/diff.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = diff;\ndiff.displayName = \"diff\";\ndiff.aliases = [];\nfunction diff(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.diff = {\n            coord: [\n                // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n                /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n                /^@@.*@@$/m,\n                /^\\d.*$/m\n            ] // deleted, inserted, unchanged, diff\n        };\n        /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */ var PREFIXES = {\n            \"deleted-sign\": \"-\",\n            \"deleted-arrow\": \"<\",\n            \"inserted-sign\": \"+\",\n            \"inserted-arrow\": \">\",\n            unchanged: \" \",\n            diff: \"!\"\n        } // add a token for each prefix\n        ;\n        Object.keys(PREFIXES).forEach(function(name) {\n            var prefix = PREFIXES[name];\n            var alias = [];\n            if (!/^\\w+$/.test(name)) {\n                // \"deleted-sign\" -> \"deleted\"\n                alias.push(/\\w+/.exec(name)[0]);\n            }\n            if (name === \"diff\") {\n                alias.push(\"bold\");\n            }\n            Prism.languages.diff[name] = {\n                pattern: RegExp(\"^(?:[\" + prefix + \"].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+\", \"m\"),\n                alias: alias,\n                inside: {\n                    line: {\n                        pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n                        lookbehind: true\n                    },\n                    prefix: {\n                        pattern: /[\\s\\S]/,\n                        alias: /\\w+/.exec(name)[0]\n                    }\n                }\n            };\n        }) // make prefixes available to Diff plugin\n        ;\n        Object.defineProperty(Prism.languages.diff, \"PREFIXES\", {\n            value: PREFIXES\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kaWZmLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFDakIsU0FBU0YsS0FBS0csS0FBSzs7SUFDZixVQUFVQSxLQUFLO1FBQ2ZBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1lBQ3JCSyxPQUFPO2dCQUNMLHNFQUFzRTtnQkFDdEU7Z0JBQ0E7Z0JBQ0E7YUFDRCxDQUFDLHFDQUFxQztRQUN6QztRQUNBOzs7O0tBSUMsR0FDRCxJQUFJQyxXQUFXO1lBQ2IsZ0JBQWdCO1lBQ2hCLGlCQUFpQjtZQUNqQixpQkFBaUI7WUFDakIsa0JBQWtCO1lBQ2xCQyxXQUFXO1lBQ1hQLE1BQU07UUFDUixFQUFFLDhCQUE4Qjs7UUFDaENRLE9BQU9DLElBQUksQ0FBQ0gsVUFBVUksT0FBTyxDQUFDLFNBQVVDLElBQUk7WUFDMUMsSUFBSUMsU0FBU04sUUFBUSxDQUFDSyxLQUFLO1lBQzNCLElBQUlFLFFBQVEsRUFBRTtZQUNkLElBQUksQ0FBQyxRQUFRQyxJQUFJLENBQUNILE9BQU87Z0JBQ3ZCLDhCQUE4QjtnQkFDOUJFLE1BQU1FLElBQUksQ0FBQyxNQUFNQyxJQUFJLENBQUNMLEtBQUssQ0FBQyxFQUFFO1lBQ2hDO1lBQ0EsSUFBSUEsU0FBUyxRQUFRO2dCQUNuQkUsTUFBTUUsSUFBSSxDQUFDO1lBQ2I7WUFDQVosTUFBTUMsU0FBUyxDQUFDSixJQUFJLENBQUNXLEtBQUssR0FBRztnQkFDM0JNLFNBQVNDLE9BQ1AsVUFBVU4sU0FBUyxrQ0FDbkI7Z0JBRUZDLE9BQU9BO2dCQUNQTSxRQUFRO29CQUNOQyxNQUFNO3dCQUNKSCxTQUFTO3dCQUNUSSxZQUFZO29CQUNkO29CQUNBVCxRQUFRO3dCQUNOSyxTQUFTO3dCQUNUSixPQUFPLE1BQU1HLElBQUksQ0FBQ0wsS0FBSyxDQUFDLEVBQUU7b0JBQzVCO2dCQUNGO1lBQ0Y7UUFDRixHQUFHLHlDQUF5Qzs7UUFDNUNILE9BQU9jLGNBQWMsQ0FBQ25CLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxFQUFFLFlBQVk7WUFDdER1QixPQUFPakI7UUFDVDtJQUNGLEdBQUdIO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2RpZmYuanM/NzFmMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkaWZmXG5kaWZmLmRpc3BsYXlOYW1lID0gJ2RpZmYnXG5kaWZmLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gZGlmZihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5kaWZmID0ge1xuICAgICAgY29vcmQ6IFtcbiAgICAgICAgLy8gTWF0Y2ggYWxsIGtpbmRzIG9mIGNvb3JkIGxpbmVzIChwcmVmaXhlZCBieSBcIisrK1wiLCBcIi0tLVwiIG9yIFwiKioqXCIpLlxuICAgICAgICAvXig/OlxcKnszfXwtezN9fFxcK3szfSkuKiQvbSwgLy8gTWF0Y2ggXCJAQCAuLi4gQEBcIiBjb29yZCBsaW5lcyBpbiB1bmlmaWVkIGRpZmYuXG4gICAgICAgIC9eQEAuKkBAJC9tLCAvLyBNYXRjaCBjb29yZCBsaW5lcyBpbiBub3JtYWwgZGlmZiAoc3RhcnRzIHdpdGggYSBudW1iZXIpLlxuICAgICAgICAvXlxcZC4qJC9tXG4gICAgICBdIC8vIGRlbGV0ZWQsIGluc2VydGVkLCB1bmNoYW5nZWQsIGRpZmZcbiAgICB9XG4gICAgLyoqXG4gICAgICogQSBtYXAgZnJvbSB0aGUgbmFtZSBvZiBhIGJsb2NrIHRvIGl0cyBsaW5lIHByZWZpeC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3Q8c3RyaW5nLCBzdHJpbmc+fVxuICAgICAqL1xuICAgIHZhciBQUkVGSVhFUyA9IHtcbiAgICAgICdkZWxldGVkLXNpZ24nOiAnLScsXG4gICAgICAnZGVsZXRlZC1hcnJvdyc6ICc8JyxcbiAgICAgICdpbnNlcnRlZC1zaWduJzogJysnLFxuICAgICAgJ2luc2VydGVkLWFycm93JzogJz4nLFxuICAgICAgdW5jaGFuZ2VkOiAnICcsXG4gICAgICBkaWZmOiAnISdcbiAgICB9IC8vIGFkZCBhIHRva2VuIGZvciBlYWNoIHByZWZpeFxuICAgIE9iamVjdC5rZXlzKFBSRUZJWEVTKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICB2YXIgcHJlZml4ID0gUFJFRklYRVNbbmFtZV1cbiAgICAgIHZhciBhbGlhcyA9IFtdXG4gICAgICBpZiAoIS9eXFx3KyQvLnRlc3QobmFtZSkpIHtcbiAgICAgICAgLy8gXCJkZWxldGVkLXNpZ25cIiAtPiBcImRlbGV0ZWRcIlxuICAgICAgICBhbGlhcy5wdXNoKC9cXHcrLy5leGVjKG5hbWUpWzBdKVxuICAgICAgfVxuICAgICAgaWYgKG5hbWUgPT09ICdkaWZmJykge1xuICAgICAgICBhbGlhcy5wdXNoKCdib2xkJylcbiAgICAgIH1cbiAgICAgIFByaXNtLmxhbmd1YWdlcy5kaWZmW25hbWVdID0ge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJ14oPzpbJyArIHByZWZpeCArICddLiooPzpcXHJcXG4/fFxcbnwoPyFbXFxcXHNcXFxcU10pKSkrJyxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgYWxpYXM6IGFsaWFzLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBsaW5lOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKC4pKD89W1xcc1xcU10pLiooPzpcXHJcXG4/fFxcbik/LyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByZWZpeDoge1xuICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdLyxcbiAgICAgICAgICAgIGFsaWFzOiAvXFx3Ky8uZXhlYyhuYW1lKVswXVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pIC8vIG1ha2UgcHJlZml4ZXMgYXZhaWxhYmxlIHRvIERpZmYgcGx1Z2luXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFByaXNtLmxhbmd1YWdlcy5kaWZmLCAnUFJFRklYRVMnLCB7XG4gICAgICB2YWx1ZTogUFJFRklYRVNcbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGlmZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29vcmQiLCJQUkVGSVhFUyIsInVuY2hhbmdlZCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwibmFtZSIsInByZWZpeCIsImFsaWFzIiwidGVzdCIsInB1c2giLCJleGVjIiwicGF0dGVybiIsIlJlZ0V4cCIsImluc2lkZSIsImxpbmUiLCJsb29rYmVoaW5kIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/diff.js\n"));

/***/ })

}]);