"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_wiki"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/wiki.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/wiki.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = wiki;\nwiki.displayName = \"wiki\";\nwiki.aliases = [];\nfunction wiki(Prism) {\n    Prism.languages.wiki = Prism.languages.extend(\"markup\", {\n        \"block-comment\": {\n            pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        heading: {\n            pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n            inside: {\n                punctuation: /^=+|=+$/,\n                important: /.+/\n            }\n        },\n        emphasis: {\n            // TODO Multi-line\n            pattern: /('{2,5}).+?\\1/,\n            inside: {\n                \"bold-italic\": {\n                    pattern: /(''''').+?(?=\\1)/,\n                    lookbehind: true,\n                    alias: [\n                        \"bold\",\n                        \"italic\"\n                    ]\n                },\n                bold: {\n                    pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n                    lookbehind: true\n                },\n                italic: {\n                    pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n                    lookbehind: true\n                },\n                punctuation: /^''+|''+$/\n            }\n        },\n        hr: {\n            pattern: /^-{4,}/m,\n            alias: \"punctuation\"\n        },\n        url: [\n            /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n            /\\[\\[.+?\\]\\]|\\[.+?\\]/\n        ],\n        variable: [\n            /__[A-Z]+__/,\n            // {{formatnum:{{#expr:{{{3}}}}}}}\n            /\\{{3}.+?\\}{3}/,\n            /\\{\\{.+?\\}\\}/\n        ],\n        symbol: [\n            /^#redirect/im,\n            /~{3,5}/\n        ],\n        // Handle table attrs:\n        // {|\n        // ! style=\"text-align:left;\"| Item\n        // |}\n        \"table-tag\": {\n            pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n            lookbehind: true,\n            inside: {\n                \"table-bar\": {\n                    pattern: /\\|$/,\n                    alias: \"punctuation\"\n                },\n                rest: Prism.languages.markup[\"tag\"].inside\n            }\n        },\n        punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n    });\n    Prism.languages.insertBefore(\"wiki\", \"tag\", {\n        // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n        nowiki: {\n            pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n            inside: {\n                tag: {\n                    pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n                    inside: Prism.languages.markup[\"tag\"].inside\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93aWtpLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFDakIsU0FBU0YsS0FBS0csS0FBSztJQUNqQkEsTUFBTUMsU0FBUyxDQUFDSixJQUFJLEdBQUdHLE1BQU1DLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFVBQVU7UUFDdEQsaUJBQWlCO1lBQ2ZDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQUMsU0FBUztZQUNQSCxTQUFTO1lBQ1RJLFFBQVE7Z0JBQ05DLGFBQWE7Z0JBQ2JDLFdBQVc7WUFDYjtRQUNGO1FBQ0FDLFVBQVU7WUFDUixrQkFBa0I7WUFDbEJQLFNBQVM7WUFDVEksUUFBUTtnQkFDTixlQUFlO29CQUNiSixTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxPQUFPO3dCQUFDO3dCQUFRO3FCQUFTO2dCQUMzQjtnQkFDQU0sTUFBTTtvQkFDSlIsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQVEsUUFBUTtvQkFDTlQsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQUksYUFBYTtZQUNmO1FBQ0Y7UUFDQUssSUFBSTtZQUNGVixTQUFTO1lBQ1RFLE9BQU87UUFDVDtRQUNBUyxLQUFLO1lBQ0g7WUFDQTtTQUNEO1FBQ0RDLFVBQVU7WUFDUjtZQUNBLGtDQUFrQztZQUNsQztZQUNBO1NBQ0Q7UUFDREMsUUFBUTtZQUFDO1lBQWdCO1NBQVM7UUFDbEMsc0JBQXNCO1FBQ3RCLEtBQUs7UUFDTCxtQ0FBbUM7UUFDbkMsS0FBSztRQUNMLGFBQWE7WUFDWGIsU0FBUztZQUNUQyxZQUFZO1lBQ1pHLFFBQVE7Z0JBQ04sYUFBYTtvQkFDWEosU0FBUztvQkFDVEUsT0FBTztnQkFDVDtnQkFDQVksTUFBTWpCLE1BQU1DLFNBQVMsQ0FBQ2lCLE1BQU0sQ0FBQyxNQUFNLENBQUNYLE1BQU07WUFDNUM7UUFDRjtRQUNBQyxhQUFhO0lBQ2Y7SUFDQVIsTUFBTUMsU0FBUyxDQUFDa0IsWUFBWSxDQUFDLFFBQVEsT0FBTztRQUMxQyxnRUFBZ0U7UUFDaEVDLFFBQVE7WUFDTmpCLFNBQVM7WUFDVEksUUFBUTtnQkFDTmMsS0FBSztvQkFDSGxCLFNBQVM7b0JBQ1RJLFFBQVFQLE1BQU1DLFNBQVMsQ0FBQ2lCLE1BQU0sQ0FBQyxNQUFNLENBQUNYLE1BQU07Z0JBQzlDO1lBQ0Y7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dpa2kuanM/ZDI5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSB3aWtpXG53aWtpLmRpc3BsYXlOYW1lID0gJ3dpa2knXG53aWtpLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gd2lraShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMud2lraSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ21hcmt1cCcsIHtcbiAgICAnYmxvY2stY29tbWVudCc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICB9LFxuICAgIGhlYWRpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9eKD0rKVtePVxcclxcbl0uKj9cXDEvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL149K3w9KyQvLFxuICAgICAgICBpbXBvcnRhbnQ6IC8uKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIGVtcGhhc2lzOiB7XG4gICAgICAvLyBUT0RPIE11bHRpLWxpbmVcbiAgICAgIHBhdHRlcm46IC8oJ3syLDV9KS4rP1xcMS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ2JvbGQtaXRhbGljJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oJycnJycpLis/KD89XFwxKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogWydib2xkJywgJ2l0YWxpYyddXG4gICAgICAgIH0sXG4gICAgICAgIGJvbGQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCcnJylbXiddKD86Lio/W14nXSk/KD89XFwxKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBpdGFsaWM6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCcnKVteJ10oPzouKj9bXiddKT8oPz1cXDEpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXicnK3wnJyskL1xuICAgICAgfVxuICAgIH0sXG4gICAgaHI6IHtcbiAgICAgIHBhdHRlcm46IC9eLXs0LH0vbSxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICB1cmw6IFtcbiAgICAgIC9JU0JOICsoPzo5N1s4OV1bIC1dPyk/KD86XFxkWyAtXT8pezl9W1xcZHhdXFxifCg/OlBNSUR8UkZDKSArXFxkKy9pLFxuICAgICAgL1xcW1xcWy4rP1xcXVxcXXxcXFsuKz9cXF0vXG4gICAgXSxcbiAgICB2YXJpYWJsZTogW1xuICAgICAgL19fW0EtWl0rX18vLCAvLyBGSVhNRSBOZXN0ZWQgc3RydWN0dXJlcyBzaG91bGQgYmUgaGFuZGxlZFxuICAgICAgLy8ge3tmb3JtYXRudW06e3sjZXhwcjp7e3szfX19fX19fVxuICAgICAgL1xce3szfS4rP1xcfXszfS8sXG4gICAgICAvXFx7XFx7Lis/XFx9XFx9L1xuICAgIF0sXG4gICAgc3ltYm9sOiBbL14jcmVkaXJlY3QvaW0sIC9+ezMsNX0vXSxcbiAgICAvLyBIYW5kbGUgdGFibGUgYXR0cnM6XG4gICAgLy8ge3xcbiAgICAvLyAhIHN0eWxlPVwidGV4dC1hbGlnbjpsZWZ0O1wifCBJdGVtXG4gICAgLy8gfH1cbiAgICAndGFibGUtdGFnJzoge1xuICAgICAgcGF0dGVybjogLygoPzpefFt8IV0pW3whXSlbXnxcXHJcXG5dK1xcfCg/IVxcfCkvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3RhYmxlLWJhcic6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFx8JC8sXG4gICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cFsndGFnJ10uaW5zaWRlXG4gICAgICB9XG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL14oPzpcXHtcXHx8XFx8XFx9fFxcfC18WyojOjshfF0pfFxcfFxcfHwhIS9tXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3dpa2knLCAndGFnJywge1xuICAgIC8vIFByZXZlbnQgaGlnaGxpZ2h0aW5nIGluc2lkZSA8bm93aWtpPiwgPHNvdXJjZT4gYW5kIDxwcmU+IHRhZ3NcbiAgICBub3dpa2k6IHtcbiAgICAgIHBhdHRlcm46IC88KG5vd2lraXxwcmV8c291cmNlKVxcYltePl0qPltcXHNcXFNdKj88XFwvXFwxPi9pLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHRhZzoge1xuICAgICAgICAgIHBhdHRlcm46IC88KD86bm93aWtpfHByZXxzb3VyY2UpXFxiW14+XSo+fDxcXC8oPzpub3dpa2l8cHJlfHNvdXJjZSk+L2ksXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMubWFya3VwWyd0YWcnXS5pbnNpZGVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwid2lraSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImhlYWRpbmciLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImltcG9ydGFudCIsImVtcGhhc2lzIiwiYm9sZCIsIml0YWxpYyIsImhyIiwidXJsIiwidmFyaWFibGUiLCJzeW1ib2wiLCJyZXN0IiwibWFya3VwIiwiaW5zZXJ0QmVmb3JlIiwibm93aWtpIiwidGFnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/wiki.js\n"));

/***/ })

}]);