"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_jsdoc"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/javadoclike.js":
/*!****************************************************!*\
  !*** ./node_modules/refractor/lang/javadoclike.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = javadoclike;\njavadoclike.displayName = \"javadoclike\";\njavadoclike.aliases = [];\nfunction javadoclike(Prism) {\n    ;\n    (function(Prism) {\n        var javaDocLike = Prism.languages.javadoclike = {\n            parameter: {\n                pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n                lookbehind: true\n            },\n            keyword: {\n                // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n                // @word, {@word}\n                pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n                lookbehind: true\n            },\n            punctuation: /[{}]/\n        };\n        /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */ function docCommentSupport(lang, callback) {\n            var tokenName = \"doc-comment\";\n            var grammar = Prism.languages[lang];\n            if (!grammar) {\n                return;\n            }\n            var token = grammar[tokenName];\n            if (!token) {\n                // add doc comment: /** */\n                var definition = {};\n                definition[tokenName] = {\n                    pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    alias: \"comment\"\n                };\n                grammar = Prism.languages.insertBefore(lang, \"comment\", definition);\n                token = grammar[tokenName];\n            }\n            if (token instanceof RegExp) {\n                // convert regex to object\n                token = grammar[tokenName] = {\n                    pattern: token\n                };\n            }\n            if (Array.isArray(token)) {\n                for(var i = 0, l = token.length; i < l; i++){\n                    if (token[i] instanceof RegExp) {\n                        token[i] = {\n                            pattern: token[i]\n                        };\n                    }\n                    callback(token[i]);\n                }\n            } else {\n                callback(token);\n            }\n        }\n        /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */ function addSupport(languages, docLanguage) {\n            if (typeof languages === \"string\") {\n                languages = [\n                    languages\n                ];\n            }\n            languages.forEach(function(lang) {\n                docCommentSupport(lang, function(pattern) {\n                    if (!pattern.inside) {\n                        pattern.inside = {};\n                    }\n                    pattern.inside.rest = docLanguage;\n                });\n            });\n        }\n        Object.defineProperty(javaDocLike, \"addSupport\", {\n            value: addSupport\n        });\n        javaDocLike.addSupport([\n            \"java\",\n            \"javascript\",\n            \"php\"\n        ], javaDocLike);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qYXZhZG9jbGlrZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUdDO0FBQ2pCQSxZQUFZQyxXQUFXLEdBQUc7QUFDMUJELFlBQVlFLE9BQU8sR0FBRyxFQUFFO0FBQ3hCLFNBQVNGLFlBQVlHLEtBQUs7O0lBQ3RCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxjQUFlRCxNQUFNRSxTQUFTLENBQUNMLFdBQVcsR0FBRztZQUMvQ00sV0FBVztnQkFDVEMsU0FDRTtnQkFDRkMsWUFBWTtZQUNkO1lBQ0FDLFNBQVM7Z0JBQ1AsMEZBQTBGO2dCQUMxRixpQkFBaUI7Z0JBQ2pCRixTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQUUsYUFBYTtRQUNmO1FBQ0E7Ozs7O0tBS0MsR0FDRCxTQUFTQyxrQkFBa0JDLElBQUksRUFBRUMsUUFBUTtZQUN2QyxJQUFJQyxZQUFZO1lBQ2hCLElBQUlDLFVBQVVaLE1BQU1FLFNBQVMsQ0FBQ08sS0FBSztZQUNuQyxJQUFJLENBQUNHLFNBQVM7Z0JBQ1o7WUFDRjtZQUNBLElBQUlDLFFBQVFELE9BQU8sQ0FBQ0QsVUFBVTtZQUM5QixJQUFJLENBQUNFLE9BQU87Z0JBQ1YsMEJBQTBCO2dCQUMxQixJQUFJQyxhQUFhLENBQUM7Z0JBQ2xCQSxVQUFVLENBQUNILFVBQVUsR0FBRztvQkFDdEJQLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pVLE9BQU87Z0JBQ1Q7Z0JBQ0FILFVBQVVaLE1BQU1FLFNBQVMsQ0FBQ2MsWUFBWSxDQUFDUCxNQUFNLFdBQVdLO2dCQUN4REQsUUFBUUQsT0FBTyxDQUFDRCxVQUFVO1lBQzVCO1lBQ0EsSUFBSUUsaUJBQWlCSSxRQUFRO2dCQUMzQiwwQkFBMEI7Z0JBQzFCSixRQUFRRCxPQUFPLENBQUNELFVBQVUsR0FBRztvQkFDM0JQLFNBQVNTO2dCQUNYO1lBQ0Y7WUFDQSxJQUFJSyxNQUFNQyxPQUFPLENBQUNOLFFBQVE7Z0JBQ3hCLElBQUssSUFBSU8sSUFBSSxHQUFHQyxJQUFJUixNQUFNUyxNQUFNLEVBQUVGLElBQUlDLEdBQUdELElBQUs7b0JBQzVDLElBQUlQLEtBQUssQ0FBQ08sRUFBRSxZQUFZSCxRQUFRO3dCQUM5QkosS0FBSyxDQUFDTyxFQUFFLEdBQUc7NEJBQ1RoQixTQUFTUyxLQUFLLENBQUNPLEVBQUU7d0JBQ25CO29CQUNGO29CQUNBVixTQUFTRyxLQUFLLENBQUNPLEVBQUU7Z0JBQ25CO1lBQ0YsT0FBTztnQkFDTFYsU0FBU0c7WUFDWDtRQUNGO1FBQ0E7Ozs7O0tBS0MsR0FDRCxTQUFTVSxXQUFXckIsU0FBUyxFQUFFc0IsV0FBVztZQUN4QyxJQUFJLE9BQU90QixjQUFjLFVBQVU7Z0JBQ2pDQSxZQUFZO29CQUFDQTtpQkFBVTtZQUN6QjtZQUNBQSxVQUFVdUIsT0FBTyxDQUFDLFNBQVVoQixJQUFJO2dCQUM5QkQsa0JBQWtCQyxNQUFNLFNBQVVMLE9BQU87b0JBQ3ZDLElBQUksQ0FBQ0EsUUFBUXNCLE1BQU0sRUFBRTt3QkFDbkJ0QixRQUFRc0IsTUFBTSxHQUFHLENBQUM7b0JBQ3BCO29CQUNBdEIsUUFBUXNCLE1BQU0sQ0FBQ0MsSUFBSSxHQUFHSDtnQkFDeEI7WUFDRjtRQUNGO1FBQ0FJLE9BQU9DLGNBQWMsQ0FBQzVCLGFBQWEsY0FBYztZQUMvQzZCLE9BQU9QO1FBQ1Q7UUFDQXRCLFlBQVlzQixVQUFVLENBQUM7WUFBQztZQUFRO1lBQWM7U0FBTSxFQUFFdEI7SUFDeEQsR0FBR0Q7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YWRvY2xpa2UuanM/NjIzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBqYXZhZG9jbGlrZVxuamF2YWRvY2xpa2UuZGlzcGxheU5hbWUgPSAnamF2YWRvY2xpa2UnXG5qYXZhZG9jbGlrZS5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIGphdmFkb2NsaWtlKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGphdmFEb2NMaWtlID0gKFByaXNtLmxhbmd1YWdlcy5qYXZhZG9jbGlrZSA9IHtcbiAgICAgIHBhcmFtZXRlcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXltcXHQgXSooPzpcXC97M318XFwqfFxcL1xcKlxcKilcXHMqQCg/OmFyZ3xhcmd1bWVudHN8cGFyYW0pXFxzKylcXHcrL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiB7XG4gICAgICAgIC8vIGtleXdvcmRzIGFyZSB0aGUgZmlyc3Qgd29yZCBpbiBhIGxpbmUgcHJlY2VkZWQgYmUgYW4gYEBgIG9yIHN1cnJvdW5kZWQgYnkgY3VybHkgYnJhY2VzLlxuICAgICAgICAvLyBAd29yZCwge0B3b3JkfVxuICAgICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKD86XFwvezN9fFxcKnxcXC9cXCpcXCopXFxzKnxcXHspQFthLXpdW2EtekEtWi1dK1xcYi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgcHVuY3R1YXRpb246IC9be31dL1xuICAgIH0pXG4gICAgLyoqXG4gICAgICogQWRkcyBkb2MgY29tbWVudCBzdXBwb3J0IHRvIHRoZSBnaXZlbiBsYW5ndWFnZSBhbmQgY2FsbHMgYSBnaXZlbiBjYWxsYmFjayBvbiBlYWNoIGRvYyBjb21tZW50IHBhdHRlcm4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZyB0aGUgbGFuZ3VhZ2UgYWRkIGRvYyBjb21tZW50IHN1cHBvcnQgdG8uXG4gICAgICogQHBhcmFtIHsocGF0dGVybjoge2luc2lkZToge3Jlc3Q6IHVuZGVmaW5lZH19KSA9PiB2b2lkfSBjYWxsYmFjayB0aGUgZnVuY3Rpb24gY2FsbGVkIHdpdGggZWFjaCBkb2MgY29tbWVudCBwYXR0ZXJuIGFzIGFyZ3VtZW50LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRvY0NvbW1lbnRTdXBwb3J0KGxhbmcsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgdG9rZW5OYW1lID0gJ2RvYy1jb21tZW50J1xuICAgICAgdmFyIGdyYW1tYXIgPSBQcmlzbS5sYW5ndWFnZXNbbGFuZ11cbiAgICAgIGlmICghZ3JhbW1hcikge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHZhciB0b2tlbiA9IGdyYW1tYXJbdG9rZW5OYW1lXVxuICAgICAgaWYgKCF0b2tlbikge1xuICAgICAgICAvLyBhZGQgZG9jIGNvbW1lbnQ6IC8qKiAqL1xuICAgICAgICB2YXIgZGVmaW5pdGlvbiA9IHt9XG4gICAgICAgIGRlZmluaXRpb25bdG9rZW5OYW1lXSA9IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXC9cXCpcXCpbXi9dW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgICAgIH1cbiAgICAgICAgZ3JhbW1hciA9IFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUobGFuZywgJ2NvbW1lbnQnLCBkZWZpbml0aW9uKVxuICAgICAgICB0b2tlbiA9IGdyYW1tYXJbdG9rZW5OYW1lXVxuICAgICAgfVxuICAgICAgaWYgKHRva2VuIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIC8vIGNvbnZlcnQgcmVnZXggdG8gb2JqZWN0XG4gICAgICAgIHRva2VuID0gZ3JhbW1hclt0b2tlbk5hbWVdID0ge1xuICAgICAgICAgIHBhdHRlcm46IHRva2VuXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRva2VuKSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRva2VuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgIGlmICh0b2tlbltpXSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgICAgICAgdG9rZW5baV0gPSB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IHRva2VuW2ldXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhbGxiYWNrKHRva2VuW2ldKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayh0b2tlbilcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBkb2MtY29tbWVudCBzdXBwb3J0IHRvIHRoZSBnaXZlbiBsYW5ndWFnZXMgZm9yIHRoZSBnaXZlbiBkb2N1bWVudGF0aW9uIGxhbmd1YWdlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXXxzdHJpbmd9IGxhbmd1YWdlc1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkb2NMYW5ndWFnZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGFkZFN1cHBvcnQobGFuZ3VhZ2VzLCBkb2NMYW5ndWFnZSkge1xuICAgICAgaWYgKHR5cGVvZiBsYW5ndWFnZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxhbmd1YWdlcyA9IFtsYW5ndWFnZXNdXG4gICAgICB9XG4gICAgICBsYW5ndWFnZXMuZm9yRWFjaChmdW5jdGlvbiAobGFuZykge1xuICAgICAgICBkb2NDb21tZW50U3VwcG9ydChsYW5nLCBmdW5jdGlvbiAocGF0dGVybikge1xuICAgICAgICAgIGlmICghcGF0dGVybi5pbnNpZGUpIHtcbiAgICAgICAgICAgIHBhdHRlcm4uaW5zaWRlID0ge31cbiAgICAgICAgICB9XG4gICAgICAgICAgcGF0dGVybi5pbnNpZGUucmVzdCA9IGRvY0xhbmd1YWdlXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoamF2YURvY0xpa2UsICdhZGRTdXBwb3J0Jywge1xuICAgICAgdmFsdWU6IGFkZFN1cHBvcnRcbiAgICB9KVxuICAgIGphdmFEb2NMaWtlLmFkZFN1cHBvcnQoWydqYXZhJywgJ2phdmFzY3JpcHQnLCAncGhwJ10sIGphdmFEb2NMaWtlKVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiamF2YWRvY2xpa2UiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImphdmFEb2NMaWtlIiwibGFuZ3VhZ2VzIiwicGFyYW1ldGVyIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwicHVuY3R1YXRpb24iLCJkb2NDb21tZW50U3VwcG9ydCIsImxhbmciLCJjYWxsYmFjayIsInRva2VuTmFtZSIsImdyYW1tYXIiLCJ0b2tlbiIsImRlZmluaXRpb24iLCJhbGlhcyIsImluc2VydEJlZm9yZSIsIlJlZ0V4cCIsIkFycmF5IiwiaXNBcnJheSIsImkiLCJsIiwibGVuZ3RoIiwiYWRkU3VwcG9ydCIsImRvY0xhbmd1YWdlIiwiZm9yRWFjaCIsImluc2lkZSIsInJlc3QiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/javadoclike.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/refractor/lang/jsdoc.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/jsdoc.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar refractorJavadoclike = __webpack_require__(/*! ./javadoclike.js */ \"(app-pages-browser)/./node_modules/refractor/lang/javadoclike.js\");\nvar refractorTypescript = __webpack_require__(/*! ./typescript.js */ \"(app-pages-browser)/./node_modules/refractor/lang/typescript.js\");\nmodule.exports = jsdoc;\njsdoc.displayName = \"jsdoc\";\njsdoc.aliases = [];\nfunction jsdoc(Prism) {\n    Prism.register(refractorJavadoclike);\n    Prism.register(refractorTypescript);\n    (function(Prism) {\n        var javascript = Prism.languages.javascript;\n        var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source;\n        var parameterPrefix = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + type + \"\\\\s+)?)\";\n        Prism.languages.jsdoc = Prism.languages.extend(\"javadoclike\", {\n            parameter: {\n                // @param {string} foo - foo bar\n                pattern: RegExp(parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"jsdoc\", \"keyword\", {\n            \"optional-parameter\": {\n                // @param {string} [baz.foo=\"bar\"] foo bar\n                pattern: RegExp(parameterPrefix + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n                lookbehind: true,\n                inside: {\n                    parameter: {\n                        pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    code: {\n                        pattern: /(=)[\\s\\S]*(?=\\]$)/,\n                        lookbehind: true,\n                        inside: javascript,\n                        alias: \"language-javascript\"\n                    },\n                    punctuation: /[=[\\]]/\n                }\n            },\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function() {\n                        return type;\n                    })),\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                {\n                    pattern: RegExp(\"(@[a-z]+\\\\s+)\" + type),\n                    lookbehind: true,\n                    inside: {\n                        string: javascript.string,\n                        number: javascript.number,\n                        boolean: javascript.boolean,\n                        keyword: Prism.languages.typescript.keyword,\n                        operator: /=>|\\.\\.\\.|[&|?:*]/,\n                        punctuation: /[.,;=<>{}()[\\]]/\n                    }\n                }\n            ],\n            example: {\n                pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n                lookbehind: true,\n                inside: {\n                    code: {\n                        pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n                        lookbehind: true,\n                        inside: javascript,\n                        alias: \"language-javascript\"\n                    }\n                }\n            }\n        });\n        Prism.languages.javadoclike.addSupport(\"javascript\", Prism.languages.jsdoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc2RvYy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLElBQUlBLHVCQUF1QkMsbUJBQU9BLENBQUM7QUFDbkMsSUFBSUMsc0JBQXNCRCxtQkFBT0EsQ0FBQztBQUNsQ0UsT0FBT0MsT0FBTyxHQUFHQztBQUNqQkEsTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUNsQixTQUFTRixNQUFNRyxLQUFLO0lBQ2xCQSxNQUFNQyxRQUFRLENBQUNUO0lBQ2ZRLE1BQU1DLFFBQVEsQ0FBQ1A7SUFDYixVQUFVTSxLQUFLO1FBQ2YsSUFBSUUsYUFBYUYsTUFBTUcsU0FBUyxDQUFDRCxVQUFVO1FBQzNDLElBQUlFLE9BQU8sMkNBQTJDQyxNQUFNO1FBQzVELElBQUlDLGtCQUNGLDZDQUE2Q0YsT0FBTztRQUN0REosTUFBTUcsU0FBUyxDQUFDTixLQUFLLEdBQUdHLE1BQU1HLFNBQVMsQ0FBQ0ksTUFBTSxDQUFDLGVBQWU7WUFDNURDLFdBQVc7Z0JBQ1QsZ0NBQWdDO2dCQUNoQ0MsU0FBU0MsT0FDUEosa0JBQWtCLHVDQUF1Q0QsTUFBTTtnQkFFakVNLFlBQVk7Z0JBQ1pDLFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtRQUNGO1FBQ0FiLE1BQU1HLFNBQVMsQ0FBQ1csWUFBWSxDQUFDLFNBQVMsV0FBVztZQUMvQyxzQkFBc0I7Z0JBQ3BCLDBDQUEwQztnQkFDMUNMLFNBQVNDLE9BQ1BKLGtCQUNFLHdEQUF3REQsTUFBTTtnQkFFbEVNLFlBQVk7Z0JBQ1pDLFFBQVE7b0JBQ05KLFdBQVc7d0JBQ1RDLFNBQVM7d0JBQ1RFLFlBQVk7d0JBQ1pDLFFBQVE7NEJBQ05DLGFBQWE7d0JBQ2Y7b0JBQ0Y7b0JBQ0FFLE1BQU07d0JBQ0pOLFNBQVM7d0JBQ1RFLFlBQVk7d0JBQ1pDLFFBQVFWO3dCQUNSYyxPQUFPO29CQUNUO29CQUNBSCxhQUFhO2dCQUNmO1lBQ0Y7WUFDQSxjQUFjO2dCQUNaO29CQUNFSixTQUFTQyxPQUNQLG1IQUFtSEwsTUFBTSxDQUFDWSxPQUFPLENBQy9ILFdBQ0E7d0JBQ0UsT0FBT2I7b0JBQ1Q7b0JBR0pPLFlBQVk7b0JBQ1pDLFFBQVE7d0JBQ05DLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0VKLFNBQVNDLE9BQU8sa0JBQWtCTjtvQkFDbENPLFlBQVk7b0JBQ1pDLFFBQVE7d0JBQ05NLFFBQVFoQixXQUFXZ0IsTUFBTTt3QkFDekJDLFFBQVFqQixXQUFXaUIsTUFBTTt3QkFDekJDLFNBQVNsQixXQUFXa0IsT0FBTzt3QkFDM0JDLFNBQVNyQixNQUFNRyxTQUFTLENBQUNtQixVQUFVLENBQUNELE9BQU87d0JBQzNDRSxVQUFVO3dCQUNWVixhQUFhO29CQUNmO2dCQUNGO2FBQ0Q7WUFDRFcsU0FBUztnQkFDUGYsU0FDRTtnQkFDRkUsWUFBWTtnQkFDWkMsUUFBUTtvQkFDTkcsTUFBTTt3QkFDSk4sU0FBUzt3QkFDVEUsWUFBWTt3QkFDWkMsUUFBUVY7d0JBQ1JjLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtRQUNGO1FBQ0FoQixNQUFNRyxTQUFTLENBQUNzQixXQUFXLENBQUNDLFVBQVUsQ0FBQyxjQUFjMUIsTUFBTUcsU0FBUyxDQUFDTixLQUFLO0lBQzVFLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzZG9jLmpzPzkzNjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgcmVmcmFjdG9ySmF2YWRvY2xpa2UgPSByZXF1aXJlKCcuL2phdmFkb2NsaWtlLmpzJylcbnZhciByZWZyYWN0b3JUeXBlc2NyaXB0ID0gcmVxdWlyZSgnLi90eXBlc2NyaXB0LmpzJylcbm1vZHVsZS5leHBvcnRzID0ganNkb2NcbmpzZG9jLmRpc3BsYXlOYW1lID0gJ2pzZG9jJ1xuanNkb2MuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBqc2RvYyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhZG9jbGlrZSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVHlwZXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgamF2YXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgdmFyIHR5cGUgPSAvXFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pK1xcfS8uc291cmNlXG4gICAgdmFyIHBhcmFtZXRlclByZWZpeCA9XG4gICAgICAnKEAoPzphcmd8YXJndW1lbnR8cGFyYW18cHJvcGVydHkpXFxcXHMrKD86JyArIHR5cGUgKyAnXFxcXHMrKT8pJ1xuICAgIFByaXNtLmxhbmd1YWdlcy5qc2RvYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFkb2NsaWtlJywge1xuICAgICAgcGFyYW1ldGVyOiB7XG4gICAgICAgIC8vIEBwYXJhbSB7c3RyaW5nfSBmb28gLSBmb28gYmFyXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBwYXJhbWV0ZXJQcmVmaXggKyAvKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRi5dKSsoPz1cXHN8JCkvLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnanNkb2MnLCAna2V5d29yZCcsIHtcbiAgICAgICdvcHRpb25hbC1wYXJhbWV0ZXInOiB7XG4gICAgICAgIC8vIEBwYXJhbSB7c3RyaW5nfSBbYmF6LmZvbz1cImJhclwiXSBmb28gYmFyXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBwYXJhbWV0ZXJQcmVmaXggK1xuICAgICAgICAgICAgL1xcWyg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkYuXSkrKD86PVteW1xcXV0rKT9cXF0oPz1cXHN8JCkvLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwYXJhbWV0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcWylbJFxcd1xceEEwLVxcdUZGRkZcXC5dKy8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgcGF0dGVybjogLyg9KVtcXHNcXFNdKig/PVxcXSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IGphdmFzY3JpcHQsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1s9W1xcXV0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oQCg/OmF1Z21lbnRzfGNsYXNzfGV4dGVuZHN8aW50ZXJmYWNlfG1lbWJlcm9mIT98dGVtcGxhdGV8dGhpc3x0eXBlZGVmKVxccysoPzo8VFlQRT5cXHMrKT8pW0EtWl1cXHcqKD86XFwuW0EtWl1cXHcqKSovLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAvPFRZUEU+L2csXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKCcoQFthLXpdK1xcXFxzKyknICsgdHlwZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHN0cmluZzogamF2YXNjcmlwdC5zdHJpbmcsXG4gICAgICAgICAgICBudW1iZXI6IGphdmFzY3JpcHQubnVtYmVyLFxuICAgICAgICAgICAgYm9vbGVhbjogamF2YXNjcmlwdC5ib29sZWFuLFxuICAgICAgICAgICAga2V5d29yZDogUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHQua2V5d29yZCxcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvPT58XFwuXFwuXFwufFsmfD86Kl0vLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bLiw7PTw+e30oKVtcXF1dL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGV4YW1wbGU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKEBleGFtcGxlXFxzKyg/IVxccykpKD86W15AXFxzXXxcXHMrKD8hXFxzKSkrPyg/PVxccyooPzpcXCpcXHMqKT8oPzpAXFx3fFxcKlxcLykpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgcGF0dGVybjogL14oW1xcdCBdKig/OlxcKlxccyopPylcXFMuKiQvbSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IGphdmFzY3JpcHQsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YWRvY2xpa2UuYWRkU3VwcG9ydCgnamF2YXNjcmlwdCcsIFByaXNtLmxhbmd1YWdlcy5qc2RvYylcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YWRvY2xpa2UiLCJyZXF1aXJlIiwicmVmcmFjdG9yVHlwZXNjcmlwdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJqc2RvYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJqYXZhc2NyaXB0IiwibGFuZ3VhZ2VzIiwidHlwZSIsInNvdXJjZSIsInBhcmFtZXRlclByZWZpeCIsImV4dGVuZCIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJpbnNlcnRCZWZvcmUiLCJjb2RlIiwiYWxpYXMiLCJyZXBsYWNlIiwic3RyaW5nIiwibnVtYmVyIiwiYm9vbGVhbiIsImtleXdvcmQiLCJ0eXBlc2NyaXB0Iiwib3BlcmF0b3IiLCJleGFtcGxlIiwiamF2YWRvY2xpa2UiLCJhZGRTdXBwb3J0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/jsdoc.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/refractor/lang/typescript.js":
/*!***************************************************!*\
  !*** ./node_modules/refractor/lang/typescript.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = typescript;\ntypescript.displayName = \"typescript\";\ntypescript.aliases = [\n    \"ts\"\n];\nfunction typescript(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.typescript = Prism.languages.extend(\"javascript\", {\n            \"class-name\": {\n                pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n                lookbehind: true,\n                greedy: true,\n                inside: null // see below\n            },\n            builtin: /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n        }) // The keywords TypeScript adds to JavaScript\n        ;\n        Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, /\\btype\\b(?=\\s*(?:[\\{*]|$))/) // doesn't work with TS because TS is too complex\n        ;\n        delete Prism.languages.typescript[\"parameter\"];\n        delete Prism.languages.typescript[\"literal-property\"] // a version of typescript specifically for highlighting types\n        ;\n        var typeInside = Prism.languages.extend(\"typescript\", {});\n        delete typeInside[\"class-name\"];\n        Prism.languages.typescript[\"class-name\"].inside = typeInside;\n        Prism.languages.insertBefore(\"typescript\", \"function\", {\n            decorator: {\n                pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n                inside: {\n                    at: {\n                        pattern: /^@/,\n                        alias: \"operator\"\n                    },\n                    function: /^[\\s\\S]+/\n                }\n            },\n            \"generic-function\": {\n                // e.g. foo<T extends \"bar\" | \"baz\">( ...\n                pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n                greedy: true,\n                inside: {\n                    function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n                    generic: {\n                        pattern: /<[\\s\\S]+/,\n                        // everything after the first <\n                        alias: \"class-name\",\n                        inside: typeInside\n                    }\n                }\n            }\n        });\n        Prism.languages.ts = Prism.languages.typescript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90eXBlc2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUMzQixTQUFTRixXQUFXRyxLQUFLOztJQUNyQixVQUFVQSxLQUFLO1FBQ2ZBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHRyxNQUFNQyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxjQUFjO1lBQ2hFLGNBQWM7Z0JBQ1pDLFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pDLFFBQVE7Z0JBQ1JDLFFBQVEsS0FBSyxZQUFZO1lBQzNCO1lBQ0FDLFNBQ0U7UUFDSixHQUFHLDZDQUE2Qzs7UUFDaERQLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxDQUFDVyxPQUFPLENBQUNDLElBQUksQ0FDckMsc0RBQ0EsNEZBQ0EsOEJBQ0EsaURBQWlEOztRQUNuRCxPQUFPVCxNQUFNQyxTQUFTLENBQUNKLFVBQVUsQ0FBQyxZQUFZO1FBQzlDLE9BQU9HLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxDQUFDLG1CQUFtQixDQUFDLDhEQUE4RDs7UUFDcEgsSUFBSWEsYUFBYVYsTUFBTUMsU0FBUyxDQUFDQyxNQUFNLENBQUMsY0FBYyxDQUFDO1FBQ3ZELE9BQU9RLFVBQVUsQ0FBQyxhQUFhO1FBQy9CVixNQUFNQyxTQUFTLENBQUNKLFVBQVUsQ0FBQyxhQUFhLENBQUNTLE1BQU0sR0FBR0k7UUFDbERWLE1BQU1DLFNBQVMsQ0FBQ1UsWUFBWSxDQUFDLGNBQWMsWUFBWTtZQUNyREMsV0FBVztnQkFDVFQsU0FBUztnQkFDVEcsUUFBUTtvQkFDTk8sSUFBSTt3QkFDRlYsU0FBUzt3QkFDVFcsT0FBTztvQkFDVDtvQkFDQUMsVUFBVTtnQkFDWjtZQUNGO1lBQ0Esb0JBQW9CO2dCQUNsQix5Q0FBeUM7Z0JBQ3pDWixTQUNFO2dCQUNGRSxRQUFRO2dCQUNSQyxRQUFRO29CQUNOUyxVQUFVO29CQUNWQyxTQUFTO3dCQUNQYixTQUFTO3dCQUNULCtCQUErQjt3QkFDL0JXLE9BQU87d0JBQ1BSLFFBQVFJO29CQUNWO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBVixNQUFNQyxTQUFTLENBQUNnQixFQUFFLEdBQUdqQixNQUFNQyxTQUFTLENBQUNKLFVBQVU7SUFDakQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHlwZXNjcmlwdC5qcz81YzMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVzY3JpcHRcbnR5cGVzY3JpcHQuZGlzcGxheU5hbWUgPSAndHlwZXNjcmlwdCdcbnR5cGVzY3JpcHQuYWxpYXNlcyA9IFsndHMnXVxuZnVuY3Rpb24gdHlwZXNjcmlwdChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnamF2YXNjcmlwdCcsIHtcbiAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXFxiKD86Y2xhc3N8ZXh0ZW5kc3xpbXBsZW1lbnRzfGluc3RhbmNlb2Z8aW50ZXJmYWNlfG5ld3x0eXBlKVxccyspKD8ha2V5b2ZcXGIpKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKig/Olxccyo8KD86W148Pl18PCg/OltePD5dfDxbXjw+XSo+KSo+KSo+KT8vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgIH0sXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86QXJyYXl8RnVuY3Rpb258UHJvbWlzZXxhbnl8Ym9vbGVhbnxjb25zb2xlfG5ldmVyfG51bWJlcnxzdHJpbmd8c3ltYm9sfHVua25vd24pXFxiL1xuICAgIH0pIC8vIFRoZSBrZXl3b3JkcyBUeXBlU2NyaXB0IGFkZHMgdG8gSmF2YVNjcmlwdFxuICAgIFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0LmtleXdvcmQucHVzaChcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxkZWNsYXJlfGlzfGtleW9mfHJlYWRvbmx5fHJlcXVpcmUpXFxiLywgLy8ga2V5d29yZHMgdGhhdCBoYXZlIHRvIGJlIGZvbGxvd2VkIGJ5IGFuIGlkZW50aWZpZXJcbiAgICAgIC9cXGIoPzphc3NlcnRzfGluZmVyfGludGVyZmFjZXxtb2R1bGV8bmFtZXNwYWNlfHR5cGUpXFxiKD89XFxzKig/Olt7XyRhLXpBLVpcXHhBMC1cXHVGRkZGXXwkKSkvLCAvLyBUaGlzIGlzIGZvciBgaW1wb3J0IHR5cGUgKiwge31gXG4gICAgICAvXFxidHlwZVxcYig/PVxccyooPzpbXFx7Kl18JCkpL1xuICAgICkgLy8gZG9lc24ndCB3b3JrIHdpdGggVFMgYmVjYXVzZSBUUyBpcyB0b28gY29tcGxleFxuICAgIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdFsncGFyYW1ldGVyJ11cbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHRbJ2xpdGVyYWwtcHJvcGVydHknXSAvLyBhIHZlcnNpb24gb2YgdHlwZXNjcmlwdCBzcGVjaWZpY2FsbHkgZm9yIGhpZ2hsaWdodGluZyB0eXBlc1xuICAgIHZhciB0eXBlSW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgndHlwZXNjcmlwdCcsIHt9KVxuICAgIGRlbGV0ZSB0eXBlSW5zaWRlWydjbGFzcy1uYW1lJ11cbiAgICBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdFsnY2xhc3MtbmFtZSddLmluc2lkZSA9IHR5cGVJbnNpZGVcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd0eXBlc2NyaXB0JywgJ2Z1bmN0aW9uJywge1xuICAgICAgZGVjb3JhdG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC9AWyRcXHdcXHhBMC1cXHVGRkZGXSsvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBhdDoge1xuICAgICAgICAgICAgcGF0dGVybjogL15ALyxcbiAgICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmdW5jdGlvbjogL15bXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnZ2VuZXJpYy1mdW5jdGlvbic6IHtcbiAgICAgICAgLy8gZS5nLiBmb288VCBleHRlbmRzIFwiYmFyXCIgfCBcImJhelwiPiggLi4uXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyM/KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKlxccyo8KD86W148Pl18PCg/OltePD5dfDxbXjw+XSo+KSo+KSo+KD89XFxzKlxcKCkvLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGZ1bmN0aW9uOiAvXiM/KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKi8sXG4gICAgICAgICAgZ2VuZXJpYzoge1xuICAgICAgICAgICAgcGF0dGVybjogLzxbXFxzXFxTXSsvLFxuICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBhZnRlciB0aGUgZmlyc3QgPFxuICAgICAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJyxcbiAgICAgICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRzID0gUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHRcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInR5cGVzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImV4dGVuZCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwiYnVpbHRpbiIsImtleXdvcmQiLCJwdXNoIiwidHlwZUluc2lkZSIsImluc2VydEJlZm9yZSIsImRlY29yYXRvciIsImF0IiwiYWxpYXMiLCJmdW5jdGlvbiIsImdlbmVyaWMiLCJ0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/typescript.js\n"));

/***/ })

}]);