"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_toml"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/toml.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/toml.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = toml;\ntoml.displayName = \"toml\";\ntoml.aliases = [];\nfunction toml(Prism) {\n    ;\n    (function(Prism) {\n        var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n        /**\n     * @param {string} pattern\n     */ function insertKey(pattern) {\n            return pattern.replace(/__/g, function() {\n                return key;\n            });\n        }\n        Prism.languages.toml = {\n            comment: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            table: {\n                pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"class-name\"\n            },\n            key: {\n                pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"property\"\n            },\n            string: {\n                pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n                greedy: true\n            },\n            date: [\n                {\n                    // Offset Date-Time, Local Date-Time, Local Date\n                    pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n                    alias: \"number\"\n                },\n                {\n                    // Local Time\n                    pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n                    alias: \"number\"\n                }\n            ],\n            number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            punctuation: /[.,=[\\]{}]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90b21sLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFDakJBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFDakIsU0FBU0YsS0FBS0csS0FBSzs7SUFDZixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsTUFBTSwrQ0FBK0NDLE1BQU07UUFDL0Q7O0tBRUMsR0FDRCxTQUFTQyxVQUFVQyxPQUFPO1lBQ3hCLE9BQU9BLFFBQVFDLE9BQU8sQ0FBQyxPQUFPO2dCQUM1QixPQUFPSjtZQUNUO1FBQ0Y7UUFDQUQsTUFBTU0sU0FBUyxDQUFDVCxJQUFJLEdBQUc7WUFDckJVLFNBQVM7Z0JBQ1BILFNBQVM7Z0JBQ1RJLFFBQVE7WUFDVjtZQUNBQyxPQUFPO2dCQUNMTCxTQUFTTSxPQUNQUCxVQUNFLHFEQUFxREQsTUFBTSxHQUU3RDtnQkFFRlMsWUFBWTtnQkFDWkgsUUFBUTtnQkFDUkksT0FBTztZQUNUO1lBQ0FYLEtBQUs7Z0JBQ0hHLFNBQVNNLE9BQ1BQLFVBQVUsNkNBQTZDRCxNQUFNLEdBQzdEO2dCQUVGUyxZQUFZO2dCQUNaSCxRQUFRO2dCQUNSSSxPQUFPO1lBQ1Q7WUFDQUMsUUFBUTtnQkFDTlQsU0FDRTtnQkFDRkksUUFBUTtZQUNWO1lBQ0FNLE1BQU07Z0JBQ0o7b0JBQ0UsZ0RBQWdEO29CQUNoRFYsU0FDRTtvQkFDRlEsT0FBTztnQkFDVDtnQkFDQTtvQkFDRSxhQUFhO29CQUNiUixTQUFTO29CQUNUUSxPQUFPO2dCQUNUO2FBQ0Q7WUFDREcsUUFDRTtZQUNGQyxTQUFTO1lBQ1RDLGFBQWE7UUFDZjtJQUNGLEdBQUdqQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90b21sLmpzP2QwNmMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gdG9tbFxudG9tbC5kaXNwbGF5TmFtZSA9ICd0b21sJ1xudG9tbC5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHRvbWwoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIga2V5ID0gLyg/OltcXHctXSt8J1teJ1xcblxccl0qJ3xcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIpLy5zb3VyY2VcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0dGVyblxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGluc2VydEtleShwYXR0ZXJuKSB7XG4gICAgICByZXR1cm4gcGF0dGVybi5yZXBsYWNlKC9fXy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBrZXlcbiAgICAgIH0pXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy50b21sID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgdGFibGU6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIGluc2VydEtleShcbiAgICAgICAgICAgIC8oXltcXHQgXSpcXFtcXHMqKD86XFxbXFxzKik/KV9fKD86XFxzKlxcLlxccypfXykqKD89XFxzKlxcXSkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGtleToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgaW5zZXJ0S2V5KC8oXltcXHQgXSp8W3ssXVxccyopX18oPzpcXHMqXFwuXFxzKl9fKSooPz1cXHMqPSkvLnNvdXJjZSksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXCJcIlwiKD86XFxcXFtcXHNcXFNdfFteXFxcXF0pKj9cIlwiXCJ8JycnW1xcc1xcU10qPycnJ3wnW14nXFxuXFxyXSonfFwiKD86XFxcXC58W15cXFxcXCJcXHJcXG5dKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGRhdGU6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIE9mZnNldCBEYXRlLVRpbWUsIExvY2FsIERhdGUtVGltZSwgTG9jYWwgRGF0ZVxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvXFxiXFxkezR9LVxcZHsyfS1cXGR7Mn0oPzpbVFxcc11cXGR7Mn06XFxkezJ9OlxcZHsyfSg/OlxcLlxcZCspPyg/Olp8WystXVxcZHsyfTpcXGR7Mn0pPyk/XFxiL2ksXG4gICAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBMb2NhbCBUaW1lXG4gICAgICAgICAgcGF0dGVybjogL1xcYlxcZHsyfTpcXGR7Mn06XFxkezJ9KD86XFwuXFxkKyk/XFxiLyxcbiAgICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgLyg/OlxcYjAoPzp4W1xcZGEtekEtWl0rKD86X1tcXGRhLXpBLVpdKykqfG9bMC03XSsoPzpfWzAtN10rKSp8YlsxMF0rKD86X1sxMF0rKSopKVxcYnxbLStdP1xcYlxcZCsoPzpfXFxkKykqKD86XFwuXFxkKyg/Ol9cXGQrKSopPyg/OltlRV1bKy1dP1xcZCsoPzpfXFxkKykqKT9cXGJ8Wy0rXT9cXGIoPzppbmZ8bmFuKVxcYi8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgcHVuY3R1YXRpb246IC9bLiw9W1xcXXt9XS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ0b21sIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJrZXkiLCJzb3VyY2UiLCJpbnNlcnRLZXkiLCJwYXR0ZXJuIiwicmVwbGFjZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJncmVlZHkiLCJ0YWJsZSIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInN0cmluZyIsImRhdGUiLCJudW1iZXIiLCJib29sZWFuIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/toml.js\n"));

/***/ })

}]);